package steps;import io.cucumber.java.en.Then;import java.util.Map;import static org.testng.Assert.assertEquals;import static org.testng.Assert.assertTrue;import helpers.DynamicDriverManager;import io.cucumber.java.en.When;import pageobjects.ResultsPage;public class ResultPageSteps {    public DynamicDriverManager driverManger;    public ResultPageSteps(DynamicDriverManager driverManager) {        this.driverManger = driverManager;    }    @When("^I navigate to the book details$")    public void navigateToBookDetails() {        ResultsPage resultPage = new ResultsPage(driverManger);        resultPage.booksTitleList.get(0).click();        assertTrue(resultPage.backToResultsButton.isDisplayed(), "Books section is not loaded.");    }    @Then("^I verify the first search result:")    public void verifyFirstSearchResult(Map<String, String> dataTable) {        ResultsPage resultPage = new ResultsPage(driverManger);        for (String field : dataTable.keySet()){            switch (field) {                case "Title":                    assertTrue(resultPage.booksTitleList.get(0).getText().contains(dataTable.get(field)), "The title of the book is not the expected one " + dataTable.get(field));                    break;                case "Badge":                    if(dataTable.get(field).equals("true")) {                        assertTrue(resultPage.booksBadgeList.get(0).isDisplayed());                        assertEquals(resultPage.booksBadgeList.get(0).getTagName(), "img", "The badge of the book is not shown.");                    }                    break;                case "Type":                    assertEquals(resultPage.selectedTypeList.get(0).getText(),(dataTable.get(field)), "The selected type of the book is not " + dataTable.get(field));                    break;                case "Price":                    assertTrue(resultPage.priceList.get(0).getAttribute("textContent").contains(dataTable.get(field)), "The price of the book is not " + dataTable.get(field));                    break;            }        }    }}