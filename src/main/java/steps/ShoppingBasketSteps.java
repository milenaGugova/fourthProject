package steps;import helpers.DynamicDriverManager;import io.cucumber.java.en.Then;import pageobjects.ShoppingBasket;import java.util.Map;import static org.testng.Assert.assertEquals;import static org.testng.Assert.assertTrue;public class ShoppingBasketSteps {    public DynamicDriverManager driverManger;    public ShoppingBasketSteps(DynamicDriverManager driverManager) {        this.driverManger = driverManager;    }    @Then("^I verify the book in the Shopping Basket list:")    public void verifyBookDetailsResult(Map<String, String> dataTable) {        ShoppingBasket shoppingBasket = new ShoppingBasket(driverManger);        String expectedPrice;        for (String field : dataTable.keySet()){            switch (field) {                case "Title":                    assertTrue(shoppingBasket.bookTitle.getText().contains(dataTable.get(field)), "The title of the book is not the expected one " + dataTable.get(field));                    break;                case "Type":                    assertEquals(shoppingBasket.printType.getText(),(dataTable.get(field)), "The selected type of the book is not " + dataTable.get(field));                    break;                case "Price":                    if (shoppingBasket.bookPrice.getText().contains("\n"))                        expectedPrice = dataTable.get(field).replace(".", "\n");                    else expectedPrice = dataTable.get(field);                    assertEquals(shoppingBasket.bookPrice.getText(),(expectedPrice), "The price of the book is not " + dataTable.get(field));                    break;                case "Quantity":                    assertEquals(shoppingBasket.bookQuantity.getText(),(dataTable.get(field)), "The price of the book is not " + dataTable.get(field));                    break;                case "Total price":					if (shoppingBasket.bookPrice.getText().contains("\n"))                        expectedPrice = dataTable.get(field).replace(".", "\n");                    else expectedPrice = dataTable.get(field);                    assertEquals(shoppingBasket.totalPrice.getText(),(expectedPrice), "The price of the book is not " + dataTable.get(field));                    break;            }        }    }}