package steps;import helpers.DynamicDriverManager;import io.cucumber.java.en.Then;import io.cucumber.java.en.When;import pageobjects.ProductPage;import java.util.Map;import static org.testng.Assert.assertEquals;import static org.testng.Assert.assertTrue;public class ProductPageSteps {    public DynamicDriverManager driverManger;    public ProductPageSteps(DynamicDriverManager driverManager) {        this.driverManger = driverManager;    }    @Then("^I verify the book details page:")    public void verifyBookDetailsResult(Map<String, String> dataTable) {        ProductPage productPage = new ProductPage(driverManger);        for (String field : dataTable.keySet()){            switch (field) {                case "Title":                    assertTrue(productPage.productTitle.getText().contains(dataTable.get(field)), "The title of the book is not the expected one " + dataTable.get(field));                    break;                case "Badge":                    if(dataTable.get(field).equals("true")) {                        assertTrue(productPage.productBadge.isDisplayed());                    }                    break;                case "Type":                    assertEquals(productPage.selectedProductTypeList.get(0).getText(),(dataTable.get(field)), "The selected type of the book is not " + dataTable.get(field));                    break;                case "Price":                    assertEquals(productPage.selectedProductTypeList.get(2).getText(),(dataTable.get(field)), "The price of the book is not " + dataTable.get(field));                    break;            }        }    }    @When("^I add the book to the basket$")    public void addTheBookToBasket() {        ProductPage productPage = new ProductPage(driverManger);        productPage.addToBasketButton.click();    }    @Then("^I verify that the notification is shown with title (.*) and there is (.*) item in the basket$")    public void verifyNotificationIsShown(String notificationTitle, String item) {        ProductPage productPage = new ProductPage(driverManger);        assertTrue(productPage.notificationText.getText().contains(notificationTitle), "The notification title is not expect one " + notificationTitle);        assertTrue(productPage.itemCountProceed.getText().contains(item)||productPage.itemCountBasket.getText().contains(item), "The item in the basket is not in expected count " + item);    }    @When("^I select Go to basket button$")    public void editBasket() {        ProductPage productPage = new ProductPage(driverManger);        productPage.goToBasketButton.click();    }}